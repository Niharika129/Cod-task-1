#include <ESP8266WiFi.h>
#include <ESPAsyncWebServer.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <Adafruit_BME280.h>

// Replace with your network credentials
const char* ssid = "YOUR_SSID";
const char* password = "YOUR_PASSWORD";

// DHT22 settings
#define DHTPIN D2
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// BME280 settings
Adafruit_BME280 bme;
#define SEALEVELPRESSURE_HPA (1013.25)

// Create AsyncWebServer object on port 80
AsyncWebServer server(80);

void setup() {
  // Start serial communication
  Serial.begin(115200);

  // Initialize DHT sensor
  dht.begin();

  // Initialize BME280 sensor
  if (!bme.begin(0x76)) {
    Serial.println("Could not find a valid BME280 sensor, check wiring!");
    while (1);
  }

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Serve index.html over HTTP
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, "text/html", index_html);
  });

  // Serve sensor readings in JSON format
  server.on("/readings", HTTP_GET, [](AsyncWebServerRequest *request){
    String json = getSensorReadings();
    request->send(200, "application/json", json);
  });

  // Start server
  server.begin();
}

void loop() {
  // Nothing to do here, everything is handled by async web server
}

// Function to read sensor data and return JSON string
String getSensorReadings() {
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();
  float pressure = bme.readPressure() / 100.0F;

  // Check if any reads failed and exit early (to try again).
  if (isnan(temperature) || isnan(humidity) || isnan(pressure)) {
    Serial.println("Failed to read from sensors!");
    return "{}";
  }

  String json = "{\"temperature\":";
  json += String(temperature);
  json += ",\"humidity\":";
  json += String(humidity);
  json += ",\"pressure\":";
  json += String(pressure);
  json += "}";

  return json;
}

// HTML code for the web page
const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE HTML><html>
<head>
  <title>ESP8266 Weather Station</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    html { font-family: Arial; display: inline-block; text-align: center; }
    h2 { font-size: 2.0rem; }
    p { font-size: 1.5rem; }
  </style>
</head>
<body>
  <h2>ESP8266 Weather Station</h2>
  <p>
    <strong>Temperature:</strong> <span id="temperature"></span> &deg;C<br>
    <strong>Humidity:</strong> <span id="humidity"></span> %<br>
    <strong>Pressure:</strong> <span id="pressure"></span> hPa
  </p>
  <script>
    setInterval(function() {
      fetch('/readings')
      .then(response => response.json())
      .then(data => {
        document.getElementById('temperature').innerText = data.temperature.toFixed(2);
        document.getElementById('humidity').innerText = data.humidity.toFixed(2);
        document.getElementById('pressure').innerText = data.pressure.toFixed(2);
      });
    }, 2000);
  </script>
</body>
</html>)rawliteral";
